#!/bin/bash


# Sean Szumlanski
# COP 3502, Fall 2017

# =======================
# SmartArray: test-all.sh
# =======================
# You can run this script at the command line like so:
#
#   bash test-all.sh
#
# For more details, see the assignment PDF.


PASS_CNT=0
NUM_TEST_CASES=5

for i in `seq -f "%02g" 1 $NUM_TEST_CASES`;
do
	echo -n "Checking testcase$i... "

	# Attempt to compile.
	gcc SmartArray.c testcase$i.c -lm 2> /dev/null
	compile_val=$?
	if [[ $compile_val != 0 ]]; then
		echo "fail (failed to compile)"
		continue
	fi

	# Run program. Capture return value to check whether it crashes.
	./a.out > myoutput$i.txt 2> /dev/null
	execution_val=$?
	if [[ $execution_val != 0 ]]; then
		echo "fail (program crashed)"
		continue
	fi

	# Run diff and capture its return value.
	diff myoutput$i.txt output$i.txt > /dev/null
	diff_val=$?
	
	# Output results based on diff's return value.
	if  [[ $diff_val != 0 ]]; then
		echo "fail (output does not match)"
	else
		echo "PASS!"
		PASS_CNT=`expr $PASS_CNT + 1`
	fi
done

# Clean up the executable file.
rm -f a.out

# Clean up the output files generated by this script.
for i in `seq -f "%02g" 1 $NUM_TEST_CASES`;
do
	rm -f myoutput$i.txt
done

if [ $PASS_CNT -eq $NUM_TEST_CASES ]; then
	echo ""
	echo ""
	echo "CONGRATULATIONS! You appear to be passing all the test cases!!"
	echo ""
	echo "Now, have you considered writing some additional ones of your own?"
	echo "Keep in mind, the test cases I wrote for you are just a sort of"
	echo "starter pack, designed to show you how you can write test cases for"
	echo "your programs, which you can do even before you've completed the"
	echo "functions you're echo working on. You should create additional test"
	echo "cases in order to fully test the functionality and correctness of"
	echo "your program."
	echo ""
else
	echo ""
	echo "                           ."
	echo "                          \":\""
	echo "                        ___:____     |\"\\/\"|"
	echo "                      ,'        \`.    \\  /"
	echo "                      |  o        \\___/  |"
	echo "                    ~^~^~^~^~^~^~^~^~^~^~^~^~"
	echo ""
	echo "                           (fail whale)"
	echo ""
	echo "Note: The fail whale is friendly and adorable! He is not here to"
	echo "      demoralize you, but rather, to bring you comfort and joy in"
	echo "      your time of need. \"Keep plugging away,\" he says! \"You"
	echo "      can do this!\""
	echo ""
fi
